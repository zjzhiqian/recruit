<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hzq.project.test.dao.BalanceMapper" >
  <resultMap id="BaseResultMap" type="com.hzq.project.test.dao.entity.Balance" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="balanceable_id" property="balanceableId" jdbcType="INTEGER" />
    <result column="balanceable_type" property="balanceableType" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="deleted_at" property="deletedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, balanceable_id, balanceable_type, amount, created_at, updated_at, deleted_at
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from balances
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from balances
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hzq.project.test.dao.entity.Balance" >
    insert into balances (id, balanceable_id, balanceable_type, 
      amount, created_at, updated_at, 
      deleted_at)
    values (#{id,jdbcType=INTEGER}, #{balanceableId,jdbcType=INTEGER}, #{balanceableType,jdbcType=INTEGER}, 
      #{amount,jdbcType=DECIMAL}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{deletedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hzq.project.test.dao.entity.Balance" >
    insert into balances
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="balanceableId != null" >
        balanceable_id,
      </if>
      <if test="balanceableType != null" >
        balanceable_type,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="deletedAt != null" >
        deleted_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="balanceableId != null" >
        #{balanceableId,jdbcType=INTEGER},
      </if>
      <if test="balanceableType != null" >
        #{balanceableType,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null" >
        #{deletedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hzq.project.test.dao.entity.Balance" >
    update balances
    <set >
      <if test="balanceableId != null" >
        balanceable_id = #{balanceableId,jdbcType=INTEGER},
      </if>
      <if test="balanceableType != null" >
        balanceable_type = #{balanceableType,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null" >
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hzq.project.test.dao.entity.Balance" >
    update balances
    set balanceable_id = #{balanceableId,jdbcType=INTEGER},
      balanceable_type = #{balanceableType,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>